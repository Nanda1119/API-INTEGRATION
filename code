// App.jsx
import React, { useState } from 'react';
import axios from 'axios';
import { Card, CardContent } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';

const App = () => {
  const [city, setCity] = useState('');
  const [weather, setWeather] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');

  const getWeather = async () => {
    setLoading(true);
    setError('');
    try {
      const response = await axios.get(`/api/weather?city=${city}`);
      setWeather(response.data);
    } catch (err) {
      setError('Could not fetch weather data.');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen flex flex-col items-center justify-center p-4 bg-blue-100">
      <h1 className="text-3xl font-bold mb-6">Weather App</h1>
      <div className="flex gap-2 mb-4">
        <Input
          type="text"
          placeholder="Enter city name"
          value={city}
          onChange={(e) => setCity(e.target.value)}
          className="w-64"
        />
        <Button onClick={getWeather} disabled={loading}>Get Weather</Button>
      </div>
      {error && <p className="text-red-500">{error}</p>}
      {weather && (
        <Card className="w-80">
          <CardContent className="p-4">
            <h2 className="text-xl font-semibold mb-2">{weather.name}</h2>
            <p>Temperature: {weather.main.temp} Â°C</p>
            <p>Weather: {weather.weather[0].description}</p>
          </CardContent>
        </Card>
      )}
    </div>
  );
};

export default App;

// api/weather.js (Node.js Express-style handler or Next.js API route example)
// Example for Next.js API route
export default async function handler(req, res) {
  const { city } = req.query;
  const apiKey = process.env.OPENWEATHER_API_KEY;

  if (!city) {
    return res.status(400).json({ error: 'City parameter is required' });
  }

  try {
    const response = await fetch(
      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`
    );
    const data = await response.json();

    if (data.cod !== 200) {
      return res.status(data.cod).json({ error: data.message });
    }

    res.status(200).json(data);
  } catch (error) {
    res.status(500).json({ error: 'Failed to fetch weather data' });
  }
}
